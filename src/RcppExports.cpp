// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// censor_both_c
NumericVector censor_both_c(NumericVector x, double min, double max);
RcppExport SEXP _jpw_censor_both_c(SEXP xSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(censor_both_c(x, min, max));
    return rcpp_result_gen;
END_RCPP
}
// censor_left_c
NumericVector censor_left_c(NumericVector x, double min);
RcppExport SEXP _jpw_censor_left_c(SEXP xSEXP, SEXP minSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    rcpp_result_gen = Rcpp::wrap(censor_left_c(x, min));
    return rcpp_result_gen;
END_RCPP
}
// censor_right_c
NumericVector censor_right_c(NumericVector x, double max);
RcppExport SEXP _jpw_censor_right_c(SEXP xSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(censor_right_c(x, max));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jpw_censor_both_c", (DL_FUNC) &_jpw_censor_both_c, 3},
    {"_jpw_censor_left_c", (DL_FUNC) &_jpw_censor_left_c, 2},
    {"_jpw_censor_right_c", (DL_FUNC) &_jpw_censor_right_c, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_jpw(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
